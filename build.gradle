buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'license'
apply plugin: 'eclipse'
apply plugin: 'idea'

ext.projectName = 'DoubleCheck'
ext.packaging = 'jar'
ext.author = 'Felix Schmidt'
ext.authorUrl = 'http://homepage.rub.de/Felix.Schmidt-c2n/'
ext.inceptionYear = '2015'

version = '0.2.0-SNAPSHOT'

group = 'com.github.boformer'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	maven {
		name 'Sponge maven repo'
		url 'http://repo.spongepowered.org/maven'
	}
	mavenCentral()
}

configurations {
	provided
	compile.extendsFrom provided
}

dependencies {
	provided 'org.spongepowered:spongeapi:1.1-SNAPSHOT'
    compile 'org.apache.commons:commons-collections4:4.0'
}

license {
	ext.name = rootProject.projectName
	ext.author = rootProject.author
	ext.url = rootProject.authorUrl
	ext.year = rootProject.inceptionYear
	exclude "**/*.info"
	exclude "**/*.html"
	exclude "assets/**"
	header new File(rootProject.getProjectDir(), "HEADER.txt")
	sourceSets = project.sourceSets
	ignoreFailures false
	strictCheck true
	mapping {
		java = 'SLASHSTAR_STYLE'
	}
}

jar {
	dependsOn configurations.runtime
	from {
		(configurations.runtime - configurations.provided).collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

javadoc {
    options.overview = "src/main/java/overview.html"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from javadoc.destinationDir
}

processResources {
	from new File(rootProject.getProjectDir(), "LICENSE.txt")
}

artifacts {
	archives jar
	archives sourcesJar
	archives javadocJar
}

build.dependsOn(sourcesJar)
build.dependsOn(javadocJar)
uploadArchives {
	repositories {
		mavenDeployer {
			// mavenUrl has to be set in your {userfolder}/.gradle/gradle.properties file
			// Example file content: 
			// mavenUrl=file:///C://mvn-repo/
			if (project.hasProperty("mavenUrl")) {
				repository(url: mavenUrl)
			}
			pom {
				groupId = project.group
				artifactId = project.name
				version = project.version
			}
		}
	}
}

// Gradle repositories and dependencies
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

// Apply plugin
apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'

// Default tasks
defaultTasks 'licenseFormat', 'build'

// Basic project information
group = 'com.github.boformer'
archivesBaseName = 'doublecheck'
version = '1.0-SNAPSHOT'

// Extended project information
ext.projectName = 'DoubleCheck'
ext.inceptionYear = '2015'
ext.packaging = 'jar'
ext.url = 'http://github.com/boformer/DoubleCheck'
ext.description = 'DoubleCheck'
ext.author = 'Felix Schmidt'

// Minimum version of Java required
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

// Project repositories
repositories {
    maven {
        name 'Sponge maven repo'
        url 'http://repo.spongepowered.org/maven'
    }
    mavenCentral()
}

configurations {
    deployerJars // maven stuff
    provided
    compile.extendsFrom provided
}

// Project dependencies
dependencies {
    provided 'org.spongepowered:spongeapi:1.1-SNAPSHOT'
    compile 'org.apache.commons:commons-collections4:4.0'
}

// Filter, process, and include resources
processResources {
    // Include in final JAR
    from 'LICENSE.txt'
}

// License header formatting
license {
    ext.name = project.name
    ext.author = project.author
    ext.url = project.url
    ext.year = project.inceptionYear
    exclude "**/*.info"
    exclude "assets/**"
    header file('HEADER.txt')
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

jar {
    dependsOn configurations.runtime
    from {
        (configurations.runtime - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}